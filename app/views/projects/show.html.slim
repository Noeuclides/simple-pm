= link_to projects_path, class: "text-2xl" do
  i class="fas fa-chevron-left text-xl"
    |  Back

div class="max-w-full rounded overflow-hidden shadow-lg"
  div class="px-20 py-10"
    div class="flex justify-between font-medium text-3xl my-4"
      div.my-2
        = @project.name
        p.my-3
          |  By:
          = @project.owner.email
      div
        button class="w-36 bg-white text-sm text-gray-800 font-light mr-2 py-2 px-4 border border-gray-400 rounded shadow"
          = link_to 'Edit Project', edit_project_path(@project)
        button class="w-36 bg-white text-sm text-gray-800 font-light py-2 px-4 border border-gray-400 rounded shadow"
          = link_to 'Delete Project', @project, method: :delete, data: { confirm: 'Are you sure?' }
    p class="my-4 text-base"
      = @project.description

    hr
    h1 class="font-medium text-2xl my-5"
      | New task
    = form_with(model: [@task.project, @task], method: :post) do |f|
      div class="flex flex-wrap my-4"
        - if @task.errors.any?
          #error_explanation
            h2
              = pluralize(@task.errors.count, "error")
              |  prohibited this task from being saved:
          ul
            - @task.errors.full_messages.each do |msg|
              li
                = msg
        = f.hidden_field :status, value: :not_started
        div class="w-full md:w-1/2 mb-6 md:mb-0"
          = f.text_field :name, placeholder: "Enter task name...", class: "block w-full text-xs"
        div class="w-full md:w-1/4 mb-6 md:mb-0 pl-5"
          = f.select :user_id, options_for_select(@project.team.members.map { |u| [u.email, u.id] }), {}, class: "block w-full text-xs"
        button class="w-full md:w-1/4 mb-6 md:mb-0 cursor-pointer"
          = f.submit :create_task, class: "w-36 bg-white text-sm text-gray-800 font-light mr-2 py-2 px-4 border border-gray-400 rounded shadow cursor-pointer"
    hr
    h1 class="font-medium text-2xl my-5"
      | Listing tasks
    div data-controller="tasks"
      ul#tasks-list data-action="drop->tasks#sort"
        - @project.tasks.joins(:project).order(position: :asc).each do |task|
          = render TaskComponent.new(task: task)
